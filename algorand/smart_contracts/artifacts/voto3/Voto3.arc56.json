{
    "name": "Voto3",
    "structs": {},
    "methods": [
        {
            "name": "inicializar_eleccion",
            "args": [
                {
                    "type": "string",
                    "name": "asset_name"
                },
                {
                    "type": "string",
                    "name": "unit_name"
                },
                {
                    "type": "uint64",
                    "name": "total"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "leer_estado_contrato",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "establecer_estado_contrato",
            "args": [
                {
                    "type": "uint64",
                    "name": "nuevo_estado"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "abrir_registro_compromisos",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "registrar_compromiso",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cerrar_registro_compromisos",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "abrir_registro_raices",
            "args": [
                {
                    "type": "uint64",
                    "name": "num_bloques"
                },
                {
                    "type": "uint64",
                    "name": "tam_bloque"
                },
                {
                    "type": "uint64",
                    "name": "tam_resto"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "registrar_raiz",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cerrar_registro_raices",
            "args": [
                {
                    "type": "string",
                    "name": "txnId_raiz"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "leer_datos_raices",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,uint64,string)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "abrir_registro_anuladores",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "registrar_anulador",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "enviar_papeleta",
            "args": [
                {
                    "type": "byte[]",
                    "name": "destinatario"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cerrar_registro_anuladores",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 9,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "estado_contrato": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZXN0YWRvX2NvbnRyYXRv"
                },
                "papeletas": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "cGFwZWxldGFz"
                },
                "papeletas_enviadas": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "cGFwZWxldGFzX2VudmlhZGFz"
                },
                "contador_compromisos": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29udGFkb3JfY29tcHJvbWlzb3M="
                },
                "contador_anuladores": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29udGFkb3JfYW51bGFkb3Jlcw=="
                },
                "contador_raices": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29udGFkb3JfcmFpY2Vz"
                },
                "num_bloques": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bnVtX2Jsb3F1ZXM="
                },
                "tam_bloque": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dGFtX2Jsb3F1ZQ=="
                },
                "tam_resto": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dGFtX3Jlc3Rv"
                },
                "txnId_raiz": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "dHhuSWRfcmFpeg=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        984
                    ],
                    "errorMessage": "Address length is 32 bytes"
                },
                {
                    "pc": [
                        737,
                        756,
                        781,
                        807,
                        839,
                        868,
                        891,
                        926,
                        943,
                        972,
                        1030
                    ],
                    "errorMessage": "El contrato no est\u00e1 en el estado correcto"
                },
                {
                    "pc": [
                        640
                    ],
                    "errorMessage": "El contrato ya est\u00e1 inicializado"
                },
                {
                    "pc": [
                        318,
                        335,
                        358,
                        375,
                        387,
                        437,
                        460,
                        477,
                        501,
                        518,
                        535,
                        547,
                        568,
                        585
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        918
                    ],
                    "errorMessage": "Solo el creador puede abrir el registro de anuladores"
                },
                {
                    "pc": [
                        730
                    ],
                    "errorMessage": "Solo el creador puede abrir el registro de compromisos"
                },
                {
                    "pc": [
                        799
                    ],
                    "errorMessage": "Solo el creador puede abrir el registro de ra\u00edces"
                },
                {
                    "pc": [
                        1023
                    ],
                    "errorMessage": "Solo el creador puede cerrar el registro de anuladores"
                },
                {
                    "pc": [
                        773
                    ],
                    "errorMessage": "Solo el creador puede cerrar el registro de compromisos"
                },
                {
                    "pc": [
                        861
                    ],
                    "errorMessage": "Solo el creador puede cerrar el registro de ra\u00edces"
                },
                {
                    "pc": [
                        965
                    ],
                    "errorMessage": "Solo el creador puede enviar papeletas"
                },
                {
                    "pc": [
                        717
                    ],
                    "errorMessage": "Solo el creador puede establecer el estado del contrato"
                },
                {
                    "pc": [
                        634
                    ],
                    "errorMessage": "Solo el creador puede inicializar la elecci\u00f3n"
                },
                {
                    "pc": [
                        703
                    ],
                    "errorMessage": "Solo el creador puede leer el estado del contrato"
                },
                {
                    "pc": [
                        936
                    ],
                    "errorMessage": "Solo el creador puede registrar anuladores"
                },
                {
                    "pc": [
                        748
                    ],
                    "errorMessage": "Solo el creador puede registrar compromisos"
                },
                {
                    "pc": [
                        832
                    ],
                    "errorMessage": "Solo el creador puede registrar ra\u00edces"
                },
                {
                    "pc": [
                        647
                    ],
                    "errorMessage": "asset_name demasiado largo"
                },
                {
                    "pc": [
                        623
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        321,
                        338,
                        361,
                        378,
                        390,
                        440,
                        463,
                        480,
                        504,
                        521,
                        538,
                        550,
                        571,
                        588
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        948,
                        1039
                    ],
                    "errorMessage": "check self.contador_anuladores exists"
                },
                {
                    "pc": [
                        760,
                        789
                    ],
                    "errorMessage": "check self.contador_compromisos exists"
                },
                {
                    "pc": [
                        844,
                        882
                    ],
                    "errorMessage": "check self.contador_raices exists"
                },
                {
                    "pc": [
                        638,
                        707,
                        734,
                        752,
                        777,
                        803,
                        836,
                        865,
                        887,
                        922,
                        940,
                        969,
                        1027
                    ],
                    "errorMessage": "check self.estado_contrato exists"
                },
                {
                    "pc": [
                        896
                    ],
                    "errorMessage": "check self.num_bloques exists"
                },
                {
                    "pc": [
                        696,
                        977
                    ],
                    "errorMessage": "check self.papeletas exists"
                },
                {
                    "pc": [
                        1009
                    ],
                    "errorMessage": "check self.papeletas_enviadas exists"
                },
                {
                    "pc": [
                        901
                    ],
                    "errorMessage": "check self.tam_bloque exists"
                },
                {
                    "pc": [
                        906
                    ],
                    "errorMessage": "check self.tam_resto exists"
                },
                {
                    "pc": [
                        911
                    ],
                    "errorMessage": "check self.txnId_raiz exists"
                },
                {
                    "pc": [
                        654
                    ],
                    "errorMessage": "unit_name demasiado largo"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAAEEBiYLD2VzdGFkb19jb250cmF0bwQVH3x1CXBhcGVsZXRhcxRjb250YWRvcl9jb21wcm9taXNvcw9jb250YWRvcl9yYWljZXMTY29udGFkb3JfYW51bGFkb3JlcxJwYXBlbGV0YXNfZW52aWFkYXMLbnVtX2Jsb3F1ZXMKdGFtX2Jsb3F1ZQl0YW1fcmVzdG8KdHhuSWRfcmFpejEYQAAmKCJnKiJnJwYiZysiZycEImcnBSJnJwciZycIImcnCSJnJwqAAGcxG0EBl4IOBHdX3coEOpd4awSJSwueBMf+k8AEEJtqYQSIAp3SBNMw/RwEnBekMAQCoorVBH2bPlgEToEs9wS5vc7BBGntrnUEgAZ47DYaAI4OAQ0A/ADnANsAygC5AKEAkAB5AEcAOwAqABMAAiJDMRkURDEYRIgCtRYpTFCwI0MxGRREMRhENhoBVwIAiAJhFilMULAjQzEZFEQxGESIAjYWKUxQsCNDMRkURDEYRIgCEyNDMRkURDEYRIgB6k8DFk8DFk8DFksDFRZXBgJPBFBPA08DUE8CUIACABpQTFApTFCwI0MxGRREMRhENhoBVwIAiAGTFilMULAjQzEZFEQxGESIAWgWKUxQsCNDMRkURDEYRDYaARc2GgIXNhoDF4gBJyNDMRkURDEYRIgBBBYpTFCwI0MxGRREMRhEiADaFilMULAjQzEZFEQxGESIALcjQzEZFEQxGEQ2GgEXiACXFilMULAjQzEZFEQxGESIAHsWKUxQsCNDMRkURDEYRDYaAVcCADYaAlcCADYaAxeIABIWKUxQsCNDMRlA/s0xGBREI0OKAwExADIJEkQiKGVEFESL/RWBIA5Ei/4VgQgORLEyCkmyLLIpIrIji/+yIov+siWL/bImgQOyECKyAbMqtDxnKCNnIiplRIkxADIJEkQiKGVEiYoBATEAMgkSRCiL/2eL/4kxADIJEkQiKGVEIxJEKIECZ4kxADIJEkQiKGVEgQISRCIrZUQjCCtLAWeJMQAyCRJEIihlRIECEkQogQNnIitlRImKAwAxADIJEkQiKGVEgQMSRCcHi/1nJwiL/mcnCYv/ZygkZ4kxADIJEkQiKGVEJBJEIicEZUQjCCcESwFniYoBATEAMgkSRCIoZUQkEkQogQVnJwqL/2ciJwRlRIkiKGVEgQUPRCInB2VEIicIZUQiJwllRCInCmVEiTEAMgkSRCIoZUSBBRJEKCVniTEAMgkSRCIoZUQlEkQiJwVlRCMIJwVLAWeJigEBMQAyCRJEIihlRCUSRLEiKmVEi/8VgSASRDIKsgCL/7IUI7ISshEkshAisgGzIicGZUQjCCcGSwFniTEAMgkSRCIoZUQlEkQogQdnIicFZUSJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 9,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}